version: "3.8"

services:
  users-management-service:
    build:
      context: ./users-management-service
    container_name: users-management-service
    ports:
      - "8001:8001"
    volumes:
      - ./users-management-service:/users-management-service-dockerized:cached
    command: python manage.py runserver 0.0.0.0:8001
    env_file:
      - ./.env
    environment:
      - ALLOWED_HOSTS=chat-service,localhost,127.0.0.1,users-management-service
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}
    networks:
      - backend
    depends_on:
      - users_mysql
      - rabbitmq

  chat-service:
    build:
      context: ./chat-service
    container_name: chat-service
    ports:
      - "8002:8002"
    volumes:
      - ./chat-service:/chat-service-dockerized:cached
    command: python manage.py runserver 0.0.0.0:8002
    env_file:
      - ./.env
    environment:
      - ALLOWED_HOSTS=chat-service,localhost,127.0.0.1,users-management-service
      - USERS_SERVICE_URL=http://users-management-service:8001
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}
    networks:
      - backend
    depends_on:
      - postgres
      - redis
      - users-management-service
      - rabbitmq

  users_mysql:
    image: mysql:5.7
    container_name: users_mysql
    environment:
      - MYSQL_DATABASE=${DATABASE_NAME}
      - MYSQL_USER=${DATABASE_USER}
      - MYSQL_PASSWORD=${DATABASE_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
    ports:
      - "3308:3306"
    networks:
      - backend
    volumes:
      - mysql_data:/var/lib/mysql

  postgres:
    image: postgres:13
    container_name: postgres
    environment:
      - POSTGRES_DB=${CHAT_POSTGRES_DB}
      - POSTGRES_USER=${CHAT_POSTGRES_USER}
      - POSTGRES_PASSWORD=${CHAT_POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    networks:
      - backend
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - backend
    volumes:
      - redis_data:/data

  rabbitmq:
    image: "rabbitmq:3-management"
    container_name: rabbitmq
    ports:
      - "5672:5672"  
      - "15672:15672" 
    env_file:
      - ./.env
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - backend

  #build a frontend service here
  frontend:
    build:
      context: ./frontend
    container_name: frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/frontend-dockerized:cached
    environment:
      - REACT_APP_USERS_SERVICE_URL=http://users-management-service:8001
      - REACT_APP_CHAT_SERVICE_URL=http://chat-service:8002
      - ENVIRONMENT=development
    networks:
      - backend
    depends_on:
      - users-management-service
      - chat-service

networks:
  backend:
    driver: bridge

volumes:
  mysql_data:
  postgres_data:
  redis_data:
  rabbitmq_data:
